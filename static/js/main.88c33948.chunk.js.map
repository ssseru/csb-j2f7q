{"version":3,"sources":["constants/issueConstants.js","constants/counterConstants.js","App.js","actions/counterAction.js","actions/issueAction.js","reducers/issueReducer.js","reducers/counterReducer.js","store.js","index.js"],"names":["FETCH_ISSEUES","INCREMENT_WATCH","INCREMENT_STAR","INCREMENT_FORK","App","list","useSelector","state","listOfIssues","counter","fetchCounter","useState","page","setPage","dispatch","useDispatch","iS","a","type","iW","iF","useEffect","uri","console","log","fetch","headers","Accept","then","response","json","data","payload","catch","error","fetchIssues","Container","Row","Col","md","ButtonGroup","Button","outline","size","color","onClick","active","watch","star","fork","dataLength","issues","length","next","loader","hasMore","map","issue","className","Card","CardBody","CardTitle","tag","title","labels","Badge","name","CardSubtitle","number","created_at","user","login","CardText","initialState","middleware","thunk","reducer","combineReducers","action","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAAaA,EAAgB,eCAhBC,EAAkB,kBAClBC,EAAiB,iBACjBC,EAAiB,iB,0ECsIfC,MA3Gf,WACE,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,gBAEpCC,EAAUH,aAAY,SAACC,GAAD,OAAWA,EAAMG,gBAC7C,EAAwBC,mBANN,GAMlB,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAWC,cAUjB,SAASC,IACPF,ECjCyB,uCAAM,WAAOA,GAAP,SAAAG,EAAA,sDACjCH,EAAS,CAAEI,KAAMhB,IADgB,2CAAN,uDDmC3B,SAASiB,IACPL,ECvC0B,uCAAM,WAAOA,GAAP,SAAAG,EAAA,sDAClCH,EAAS,CAAEI,KAAMjB,IADiB,2CAAN,uDDyC5B,SAASmB,IACPN,EC7CyB,uCAAM,WAAOA,GAAP,SAAAG,EAAA,sDACjCH,EAAS,CAAEI,KAAMf,IADgB,2CAAN,uDDqD3B,OAvBAkB,qBAAU,WACRP,EEnCuB,SAACF,GAAD,8CAAU,WAAOE,GAAP,eAAAG,EAAA,sDAE7BK,EACJ,sEACAV,EACFW,QAAQC,IAAI,eAAgBZ,EAAM,qCAClCa,MAAMH,EAAK,CACTI,QAAS,CACPC,OAAQ,oCAGTC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAE5BF,MAAK,SAACG,GAAD,OAAUjB,EAAS,CAAEI,KAAMlB,EAAegC,QAASD,OACxDE,OAAM,SAACC,GAAD,OAAWX,QAAQW,MAAMA,MAdC,2CAAV,sDFmCdC,CAAYvB,MACpB,CAACE,EAAUF,IAsBZ,eAACwB,EAAA,EAAD,WACE,uBACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,sDAEF,cAACD,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,KAAK,KAAKC,MAAM,UAAUC,QAAS,kBAAM1B,KAAzD,UACE,cAAC,IAAD,IADF,YAGA,cAACsB,EAAA,EAAD,CAAQK,QAAM,EAACJ,SAAO,EAACC,KAAK,KAAKC,MAAM,UAAvC,SACGnC,EAAQsC,aAIf,cAACT,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,KAAK,KAAKC,MAAM,UAAUC,QAAS,kBAAM7B,KAAzD,UACE,cAAC,IAAD,IADF,UAIA,cAACyB,EAAA,EAAD,CAAQK,QAAM,EAACJ,SAAO,EAACC,KAAK,KAAKC,MAAM,UAAvC,SACGnC,EAAQuC,YAKf,cAACV,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,KAAK,KAAKC,MAAM,UAAUC,QAAS,kBAAMzB,KAAzD,UACE,cAAC,IAAD,IADF,WAEU,IACV,cAACqB,EAAA,EAAD,CAAQK,QAAM,EAACJ,SAAO,EAACC,KAAK,KAAKC,MAAM,UAAvC,SACGnC,EAAQwC,eAKjB,uBACA,cAACZ,EAAA,EAAD,UACE,cAAC,IAAD,CACEa,WAAY7C,EAAK8C,OAAOC,OACxBC,KA/DY,WAClBxC,EAAQD,EAAO,IA+DT0C,OAAQ,4CACRC,SAAS,EAJX,SAMGlD,EAAK8C,OAAOC,OAAS,EACpB/C,EAAK8C,OAAOK,KAAI,SAACC,GAAD,OACd,qBAAKC,UAAU,YAAf,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,SAAqBL,EAAMM,QAC1BN,EAAMO,OAAO,GACZ,cAACC,EAAA,EAAD,CAAOrB,MAAM,OAAb,SAAqBa,EAAMO,OAAO,GAAGE,OAErC,GAEF,eAACC,EAAA,EAAD,CAAcL,IAAI,KAAKJ,UAAU,kBAAjC,cACID,EAAMW,OADV,eAC8BX,EAAMY,WADpC,MACmD,IAChDZ,EAAMa,KAAKC,SAEd,cAACC,EAAA,EAAD,UAAWf,EAAMM,cAbSN,EAAMM,UAmBxC,8B,+BG/HNU,EAAe,CACnBtB,OAAQ,ICGJsB,EAAe,CACnB1B,MAAO,EACPC,KAAM,EACNC,KAAM,GCHFyB,EAAa,CAACC,KACdC,EAAUC,YAAgB,CAC9BrE,aFHgC,WAAmC,IAAlCD,EAAiC,uDAAzBkE,EAAcK,EAAW,uCAClE,OAAQA,EAAO5D,MACb,KAAKlB,EACH,OAAO,2BAAKO,GAAZ,IAAmB4C,OAAO,GAAD,mBAAM5C,EAAM4C,QAAZ,YAAuB2B,EAAO9C,YAEzD,QACE,OAAOzB,IEFXG,aDE0B,WAAmC,IAAlCH,EAAiC,uDAAzBkE,EAAcK,EAAW,uCAC5D,OAAQA,EAAO5D,MACb,KAAKhB,EACH,OAAO,2BAAKK,GAAZ,IAAmByC,KAAMzC,EAAMyC,KAAO,IACxC,KAAK/C,EACH,OAAO,2BAAKM,GAAZ,IAAmBwC,MAAOxC,EAAMwC,MAAQ,IAC1C,KAAK5C,EACH,OAAO,2BAAKI,GAAZ,IAAmB0C,KAAM1C,EAAM0C,KAAO,IACxC,QACE,OAAO1C,MCDEwE,EARDC,YACZJ,EAPmB,GASnBK,YACEC,IAAe,WAAf,EAAmBR,GACnBS,OAAOC,8BAAgCD,OAAOC,iCCRlDC,IAASC,OACP,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,IAAMQ,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.88c33948.chunk.js","sourcesContent":["export const FETCH_ISSEUES = \"FETCH_ISSUES\";\n","export const INCREMENT_WATCH = \"INCREMENT_WATCH\";\nexport const INCREMENT_STAR = \"INCREMENT_STAR\";\nexport const INCREMENT_FORK = \"INCREMENT_FORK\";\n","import \"./App.css\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  CardText,\n  Badge,\n  Button,\n  ButtonGroup,\n} from \"reactstrap\";\nimport { fetchIssues } from \"./actions/issueAction\";\nimport {\n  incrementFork,\n  incrementStar,\n  incrementWatch,\n} from \"./actions/counterAction\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\nimport StarRateOutlinedIcon from \"@material-ui/icons/StarRateOutlined\";\nimport RestaurantOutlinedIcon from \"@material-ui/icons/RestaurantOutlined\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst PAGE_NUMBER = 1;\n\nfunction App() {\n  const list = useSelector((state) => state.listOfIssues);\n  // console.log(list.issues.length);\n  const counter = useSelector((state) => state.fetchCounter);\n  const [page, setPage] = useState(PAGE_NUMBER);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchIssues(page));\n  }, [dispatch, page]);\n\n  const scrollToEnd = () => {\n    setPage(page + 1);\n  };\n\n  function iS() {\n    dispatch(incrementStar());\n  }\n  function iW() {\n    dispatch(incrementWatch());\n  }\n  function iF() {\n    dispatch(incrementFork());\n  }\n\n  // const fetchMoreData = () => {\n  //   dispatch(fetchIssues(page));\n  //   setPage(page + 1);\n  // };\n\n  return (\n    <Container>\n      <hr />\n      <Row>\n        <Col md={6}>\n          <h1>Github Issues Page</h1>\n        </Col>\n        <Col>\n          <ButtonGroup>\n            <Button outline size=\"sm\" color=\"primary\" onClick={() => iW()}>\n              <VisibilityOutlinedIcon /> Watch\n            </Button>\n            <Button active outline size=\"sm\" color=\"primary\">\n              {counter.watch}\n            </Button>\n          </ButtonGroup>\n        </Col>\n        <Col>\n          <ButtonGroup>\n            <Button outline size=\"sm\" color=\"primary\" onClick={() => iS()}>\n              <StarRateOutlinedIcon />\n              Star\n            </Button>\n            <Button active outline size=\"sm\" color=\"primary\">\n              {counter.star}\n            </Button>\n          </ButtonGroup>\n        </Col>\n\n        <Col>\n          <ButtonGroup>\n            <Button outline size=\"sm\" color=\"primary\" onClick={() => iF()}>\n              <RestaurantOutlinedIcon /> Fork\n            </Button>{\" \"}\n            <Button active outline size=\"sm\" color=\"primary\">\n              {counter.fork}\n            </Button>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <InfiniteScroll\n          dataLength={list.issues.length}\n          next={scrollToEnd}\n          loader={<h4>Loading...</h4>}\n          hasMore={true}\n        >\n          {list.issues.length > 0 ? (\n            list.issues.map((issue) => (\n              <div className=\"container\" key={issue.title}>\n                <Card>\n                  <CardBody>\n                    <CardTitle tag=\"h5\">{issue.title}</CardTitle>\n                    {issue.labels[0] ? (\n                      <Badge color=\"info\">{issue.labels[0].name}</Badge>\n                    ) : (\n                      \"\"\n                    )}\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                      #{issue.number} created at {issue.created_at} by{\" \"}\n                      {issue.user.login}\n                    </CardSubtitle>\n                    <CardText>{issue.title}</CardText>\n                  </CardBody>\n                </Card>\n              </div>\n            ))\n          ) : (\n            <p></p>\n          )}\n        </InfiniteScroll>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import {\n  INCREMENT_FORK,\n  INCREMENT_WATCH,\n  INCREMENT_STAR,\n} from \"../constants/counterConstants\";\n\nexport const incrementFork = () => async (dispatch) => {\n  dispatch({ type: INCREMENT_FORK });\n};\nexport const incrementWatch = () => async (dispatch) => {\n  dispatch({ type: INCREMENT_WATCH });\n};\nexport const incrementStar = () => async (dispatch) => {\n  dispatch({ type: INCREMENT_STAR });\n};\n","import { FETCH_ISSEUES } from \"../constants/issueConstants\";\n\nexport const fetchIssues = (page) => async (dispatch) => {\n  // console.log(\"In issues action\");\n  const uri =\n    \"https://api.github.com/repos/facebook/create-react-app/issues?page=\" +\n    page;\n  console.log(\"fetched page\", page, \"from github repo create-react-app\");\n  fetch(uri, {\n    headers: {\n      Accept: \"application/vnd.github.v3+json\",\n    },\n  })\n    .then((response) => response.json()) //Converting the response to a JSON object\n    // .then((res) => console.log(res))\n    .then((data) => dispatch({ type: FETCH_ISSEUES, payload: data }))\n    .catch((error) => console.error(error));\n\n  // const { data } = await axios.get(\n  //   \"https://github.com/ssseru/campaignform/issues\",\n  //   {\n  //     headers: { accept: \"application/vnd.github.v3+json\" },\n  //   }\n  // );\n  // console.log(data);\n  // dispatch({ type: FETCH_ISSEUES, payload: {} });\n};\n","import { FETCH_ISSEUES } from \"../constants/issueConstants\";\nconst initialState = {\n  issues: [],\n};\nexport const fetchIssuesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ISSEUES:\n      return { ...state, issues: [...state.issues, ...action.payload] };\n    // return { ...state, issues: state.issues.extend(...action.payload) };\n    default:\n      return state;\n  }\n};\n","import {\n  INCREMENT_FORK,\n  INCREMENT_WATCH,\n  INCREMENT_STAR,\n} from \"../constants/counterConstants\";\nconst initialState = {\n  watch: 0,\n  star: 0,\n  fork: 0,\n};\nexport const fetchCounter = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_STAR:\n      return { ...state, star: state.star + 1 };\n    case INCREMENT_WATCH:\n      return { ...state, watch: state.watch + 1 };\n    case INCREMENT_FORK:\n      return { ...state, fork: state.fork + 1 };\n    default:\n      return state;\n  }\n};\n","import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { fetchIssuesReducer } from \"./reducers/issueReducer\";\nimport { fetchCounter } from \"./reducers/counterReducer\";\nconst initialState = {};\nconst middleware = [thunk];\nconst reducer = combineReducers({\n  listOfIssues: fetchIssuesReducer,\n  fetchCounter: fetchCounter,\n});\nconst store = createStore(\n  reducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}